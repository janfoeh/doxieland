#!/usr/bin/env ruby
require 'pry'
require "doxieland"
require "thor"
require "ruby-progressbar"
require 'hirb'

class CLI < Thor
  include Thor::Actions

  class_option 'scanner-ip', desc:'your scanners network address', banner: 'xxx.xxx.xxx.xxx', type: :string, aliases: '-i'
  class_option :password, desc:'your scanners password', type: :string, aliases: '-p'

  desc "info", "show information about your scanner"
  def info
    options = get_options_with_defaults

    response =
      Doxieland.api(options) do |api|
        api.get_info.result
      end

      puts Hirb::Helpers::AutoTable.render(
          response,
          description:  false,
          headers:      false
        )
  end

  desc "list", "list all scans saved in your scanners memory"
  def list
    options = get_options_with_defaults

    scans =
      Doxieland.api(options) do |api|
        api.list_scans
            .result
            .map do |scan|
              {
                name:     scan[:name].match(/[0-9]{4,}/)[0],
                scanned:  scan[:modified]
              }
            end
      end

    puts Hirb::Helpers::AutoTable.render(
      scans,
      fields: [:name, :scanned],
      description: false
    )

    puts scans.inspect
  end

  desc "defaults", "show or set default options for doxieland"
  def defaults
    if options.none?
      config = Doxieland.config

      if config.any?
        puts Hirb::Helpers::AutoTable.render(
            config,
            description:  false,
            headers:      { 0 => 'option', 1 => 'value' }
          )
      else
        puts "no defaults set"
      end

    else
      File.open(Doxieland.config_path, 'w') { |file| file << YAML.dump(options) }
    end
  end

    protected

  def get_options_with_defaults
    (options || HashWithIndifferentAccess.new).reverse_merge(Doxieland.config)
  end
end

CLI.start( ARGV.any? ? ARGV : ['help'] )